import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import indexStyles from '@/styles/index.module.css'
import {useState,useEffect} from 'react'
import ResultCard from '../components/resultCard'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {

const [searchKeyword, setSearchKeyword] = useState('')
const [dummyData, setDummyData] = useState([])
const [loading,setLoading] = useState(false)


const searchHandler = async()=> {

  setLoading(true)
  const res = await fetch(`/api/search?q=${searchKeyword}`);
  const data = await res.json().then(data=> data.results);
  await setDummyData(data)
  setLoading(false)


}

  return (
    <>
      <Head>
        <title>Speech Finder</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <p>
            Website helps you finding the forgotten texts 
            
          </p>
        </div>

   
         <form onSubmit={(event) => event.preventDefault()}>
          <input type= 'text' className={indexStyles.searchBox}
          placeholder='Please enter the text you want to search' 
          value={searchKeyword}
          onChange={(el)=> setSearchKeyword(el.target.value)}
          style={{"height":"3em", 'width': '60vw'}}/>

          <p> Search Keyword: {searchKeyword} </p>
          <input 
          type='submit'
          onClick={searchHandler}
          className={indexStyles.searchButton}
          />

          </form>  
       <>
       {loading && <h3> Loading </h3>}

<div className={indexStyles.searchResults}>
      {!loading && dummyData.map( (data,index) =><div key={index} className={indexStyles.outerCard}> <h3 className={inter.className}> {data.filename} </h3> 
      
       {data.contexts.map((item,index) => <ResultCard key={index} item={item} />)} 
    
      </div>)}
      </div> 
</>

        
      </main>
    </>
  )
}
